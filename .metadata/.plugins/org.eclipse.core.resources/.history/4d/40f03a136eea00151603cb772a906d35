/*
 * conn.cpp
 *
 *  Created on: Mar 15, 2016
 *      Author: pzw
 */

#include "conn.h"

#include <unistd.h>
#include <iostream>

conn::conn():conn_fd(-1),ev_in(NULL),ev_out(NULL),conn_base(NULL) {
    input = evbuffer_new();
    output = evbuffer_new();
}

conn::conn(event_base* base, int fd, event_callback_fn read_cb, event_callback_fn write_cb) {
    input = evbuffer_new();
    output = evbuffer_new();
    conn_fd = fd;
    conn_base = base;

    if (read_cb == NULL)
    	ev_in = NULL;
    else
    {
    	ev_in = event_new(base, fd, EV_READ|EV_PERSIST|EV_ET, read_cb, (void *)this);
    	event_add(ev_in, NULL);
    }

    if (write_cb == NULL)
    	ev_out = NULL;
    else
    {
    	ev_out = event_new(base, fd, EV_READ|EV_PERSIST|EV_ET, write_cb, (void *)this);
    	event_add(ev_out, NULL);
    }
}

conn::~conn() {
	// TODO Auto-generated destructor stub
	close(conn_fd);
	if (ev_in)
		event_del(ev_in);
	if (ev_out)
		event_del(ev_out);
	evbuffer_free(input);
	evbuffer_free(output);
}

int conn::send(char* s)
{
	if (-1 == evbuffer_add_printf(output,"%s",s))
		cerr << "evbuffer printf error!" << endl;
	return evbuffer_write(output, conn_fd);
}

