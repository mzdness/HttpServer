//============================================================================
// Name        : P2P_transfer.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include "tcp_server.h"
using namespace std;

typedef struct __net_work
{
	int work_type;
	int work_sock_fd;
	char work_desc[100];
}net_work, *pnet_work;

class net_work_queue
{
public:
	net_work_queue(): pw(0),pr(0){};
	~net_work_queue() = default;
	bool add_work(net_work );
	pnet_work get_work_remove();
private:
	int pw;
	int pr;
	net_work work_queue[10];
};

net_work_queue net_work_mgr;

void *worker_main(void *parg)
{
	ifstream file_to_send;
	size_t file_size;
	vector<bool> has_segment;

	return 0;
}

void start_send()
{
	tcp_server ts("9876"); // set up a listen of port 9876

	int conn_fd;
	conn_fd = ts.accept();




    pthread_t worker_id;
    int worker_create_ret = pthread_create(&worker_id,NULL,worker_main,NULL);
    if (worker_create_ret)
	{
		cerr << "cannot allocate worker!"<<endl;
	}



	pthread_join(worker_id,NULL);
	return;
}

void start_receive()
{;}


int main(int argc, char* argv[]) {
	string option (argv[1]);

	if (option == "-tx")
		start_send();
	else
		start_receive();

	return 0;
}
